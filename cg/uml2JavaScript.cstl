

/* JS as defined at: https://developer.mozilla.org/en-US/docs/Web/JavaScript/ */




nestedTfunc71::
Set |-->newSet
Sequence |-->newList
_* |-->newSet

seq2ruleset141::
_* |-->_*`seq2subruleset140

OclUnaryExpression::
_1 ->size ( ) |-->_1.length

lambda _1 : _2 in _3 |-->function(_1) { return _3; }

_1 _2 ( )  |-->_2`nestedTfunc68 ( _1 ) 
_1 _2  |-->_1`func67 _2 

seq2subruleset140::
_1 _2 |-->_1
_1 _2 _3  |-->_1 
_0 |-->_0

OclParameter::
_1 : _2 |-->_1

OclOperation::
operation _2 ( ) : void pre: _3  post: _4  |-->this . _2 = function ( ) { } ; 
operation _2 ( _* ) : void pre: _3  post: _4  |-->this . _2 = function ( _*`seq2ruleset141 ) { } ; 
query _2 ( ) : _3 pre: _4  post: _5  |-->this . _2 = function ( ) { } ; 
query _2 ( _* ) : _3 pre: _4  post: _5  |-->this . _2 = function ( _*`seq2ruleset115 ) { } ; 

operation _2 ( ) : void pre: _3  post: _4  activity: _5  |-->this . _2 = function ( ) { _5 } ; 
operation _2 ( _* ) : void pre: _3  post: _4  activity: _5  |-->this . _2 = function ( _*`seq2ruleset141 ) { _5 } ; 
query _2 ( ) : _3 pre: _4  post: _5  activity: _6  |-->this . _2 = function ( ) { _6 } ; 
query _2 ( _* ) : _3 pre: _4  post: _5  activity: _6  |-->this . _2 = function ( _*`seq2ruleset115 ) { _6 } ; 

static operation _2 ( ) : void pre: _3  post: _4  |--> 
static operation _2 ( _* ) : void pre: _3  post: _4  |--> 
static query _2 ( ) : _3 pre: _4  post: _5  |--> 
static query _2 ( _* ) : _3 pre: _4  post: _5  |--> 

static operation _2 ( ) : void pre: _3  post: _4  activity: _5  |--> 
static operation _2 ( _* ) : void pre: _3  post: _4  activity: _5  |--> 
static query _2 ( ) : _3 pre: _4  post: _5  activity: _6  |--> 
static query _2 ( _* ) : _3 pre: _4  post: _5  activity: _6  |--> 


seq3ruleset151::
; |-->,
literal _2  |-->_2 : _2`nestedTfunc150 
_0 |-->_0

OclType::
void  |-->Null 
OclAny  |-->Object 
int |-->Number
double |-->Number
long |-->Number
boolean |-->Boolean
String  |-->String 
Set ( _3 )  |-->Object 
Sequence ( _3 )  |-->Object 
_1  |-->Object 
Function ( _3 , _5 )  |-->Function 
Map ( _3 , _5 )  |-->Map 


typInit::
void  |-->null 
OclAny  |-->{ }  
int |-->0
double |-->0.0
long |-->0
boolean |-->false
String  |-->"" 
Set   |-->[ ]  
Sequence  |-->[ ] 
Set ( _1 )   |-->[ ] 
Sequence ( _1 )   |-->[ ]
Map ( _1 , _2 ) |-->{ }  
_1 |-->{ } 


nestedTfunc150::
_1 |-->'_1'

nestedSfunc64::
this |-->self
_1 |-->_1
_* |-->self

seq3subruleset75::
_* |-->( _*`seq3ruleset74 )

seq3subruleset77::
_* |-->_*`seq3ruleset76


OclClass::
class _2 { }  |-->class _2 { constructor _2 ( ) { } }  
class _2 { _4 }  |-->class _2 { _4`staticClassContents constructor _2 ( ) { _4 }  } 
class _2 { _* }  |-->class _2 { constructor _2 ( ) { _* }  } 

class _2 extends _4 { }  |-->class _2 extends _4 { constructor _2 ( ) { } }  
class _2 extends _4 { _6 }  |-->class _2 extends _4 { _6`staticClassContents constructor _2 ( ) { _6 } }  
class _2 extends _4 { _* }  |-->class _2 extends _4 { constructor _2 ( ) { _* } } 

abstract class _2 { }  |-->class _2 { constructor _2 ( ) { } }  
abstract class _2 { _4 }  |-->class _2 { _4`staticClassContents constructor _2 ( ) { _4 } }  
abstract class _2 { _* }  |-->class _2 { constructor _2 ( ) { _* }  } 

abstract class _2 extends _4 { }  |-->class _2 extends _4 { constructor _2 ( ) { } }  
abstract class _2 extends _4 { _6 }  |-->class _2 extends _4 { _6`staticClassContents constructor _2 ( ) { _6 } }  
abstract class _2 extends _4 { _* }  |-->class _2 extends _4 { constructor _2 ( ) { _* } } 



seq3subruleset147::
_* |-->_*`seq3ruleset146

OclCollectionExpression::
Set { _3 }  |-->newSet _3`seq3subruleset73 
Sequence { _3 }  |-->newList _3`seq3subruleset75 
_1 { }  |-->_1`nestedTfunc71 ( ) 

seq3ruleset65::
_1 |-->_1 
_0 |-->_0

nestedTfunc68::
->toLowerCase |-->toLowerCase
->toUpperCase |-->toUpperCase
->front |-->front
->tail |-->tail
->first |-->first
->last |-->last
->cos |-->cos
->sin |-->sin
->tan |-->tan
->exp |-->exp
->log |-->log
->cosh |-->cosh
->sin |-->sinh
->tan |-->tanh
->sqrt |-->sqrt
->cbrt |-->cbrt

_1 |-->_1


seq2ruleset115::
_* |-->_*`seq2subruleset114

nestedTfunc69::
->including |-->including
->union |-->union
->intersection |-->intersection
->excludesAll |-->excludesAll
->excludes |-->excludes
->includesAll |-->includesAll
->indexOf |-->indexOf
->lastIndexOf |-->lastIndexOf
->append |-->append
->prepend |-->prepend
->pow |-->pow
->gcd |-->gcd

_1 |-->_1


seq3subruleset73::
_* |-->( _*`seq3ruleset72 )

seq3ruleset146::
; |--> 
_1 |-->_1 
_0 |-->_0


OclBasicExpression::
null  |-->null
this |-->self
_1 . _3 ( )  |-->_1._3( ) 
_1 [ _3 ]  |-->_1[ _3 - 1 ] 
_1 . _3 ( _5 )  |-->_1._3 _5`seq3subruleset66 
_1 . _3  |-->_1._3 
_1 |-->_1 <when> _1 Integer
_1 |-->_1 <when> _1 Real
_1 |-->_1 <when> _1 Boolean
_1 |-->_1 <when> _1 String
_1 |-->_1
_* |-->self


OclBinaryExpression::
_1 ->apply _2 |-->_1(_2)

_1 ->at ( _2 ) |-->_1[_2]

_1 ->gcd ( _2 ) |-->gcd(_1, _2)

_1 ->oclAsType ( _2 ) |-->_1

_1 ->collect _2 |-->collect(_1, function(self) { return _2; } )
_1 ->collect ( _2 | _3 ) |-->collect(_1, function(_2) { return _3; })

_1 ->select _2 |-->select(_1, function(self) { return _2; } )
_1 ->select ( _2 | _3 ) |-->select(_1, function(_2) { return _3; })

_1 ->reject _2 |-->reject(_1, function(self) { return _2; } )
_1 ->reject ( _2 | _3 ) |-->reject(_1, function(_2) { return _3; })

_1 _2 ( _4 )  |-->_2`nestedTfunc69 ( _1 , _4 ) 
_1 <= _3  |-->_1 <= _3 
_1 mod _3  |-->_1 % _3 
_1 or _3  |-->_1 || _3 
_1 & _3  |-->_1 && _3 
_1 => _2 |-->(_1?_2:true)
_1 * _3  |-->_1 * _3 
_1 + _3  |-->_1 + _3 
_1 - _3  |-->_1 - _3 
_1 /= _3  |-->_1 != _3 
_1 / _3  |-->_1 / _3 
_1 div _3  |-->( int ) ( _1 / _3 ) 
_1 <>= _3  |-->_1 == _3 
_1 < _3  |-->_1 < _3 
_1 = _3  |-->_1 == _3 
_1 > _3  |-->_1 > _3 
_1 >= _3  |-->_1 >= _3 

seq3ruleset72::
_1 |-->_1 
_0 |-->_0

seq3ruleset74::
_1 |-->_1 
_0 |-->_0

nestedSfunc70::
int |-->Number
double |-->Number
long |-->Number
boolean |-->Boolean
_* |-->Number

seq2subruleset114::
_1 _2 _3  |-->_1 
_0 |-->_0

OclConditionalExpression::
if _2 then _4 else _6 endif  |-->( _2 ) ? _4 : _6 

seq3subruleset66::
_* |-->( _*`seq3ruleset65 )

func67::
not |-->!
_1 |-->_1
_* |-->-

seq3ruleset76::
; |--> 
_1 := _3  |-->_1 = _3 ; 
_0 |-->_0

seq3subruleset152::
_* |-->{ _*`seq3ruleset151 }


staticClassContents::
; |-->
; _* |-->_*`recurse
_1 ; |-->_1`staticProperty
_1 ; _* |-->_1`staticProperty _*`recurse


staticProperty::
static attribute _2 : double   |--> static _2 = 0.0;
static attribute _2 : String   |--> static _2 = ""; 
static attribute _2 : int  |--> static _2 = 0;
static attribute _2 : long  |--> static _2 = 0;
static attribute _2 : _4  |--> static _2 = null; 

attribute _2 : _4 |-->

static operation _2 ( ) : void pre: _3  post: _4  |--> static _2( ) { } ; 
static operation _2 ( _* ) : void pre: _3  post: _4  |--> static _2( _*`seq2ruleset141 ) { } ; 
static query _2 ( ) : _3 pre: _4  post: _5  |--> static _2( ) { } ; 
static query _2 ( _* ) : _3 pre: _4  post: _5  |--> static _2( _*`seq2ruleset115 ) { } ; 

static operation _2 ( ) : void pre: _3  post: _4  activity: _5  |--> static _2( ) { _5 } ; 
static operation _2 ( _* ) : void pre: _3  post: _4  activity: _5  |--> static _2( _*`seq2ruleset141 ) { _5 } ; 
static query _2 ( ) : _3 pre: _4  post: _5  activity: _6  |--> static _2( ) { _6 } ; 
static query _2 ( _* ) : _3 pre: _4  post: _5  activity: _6  |--> static _2( _*`seq2ruleset115 ) { _6 } ; 

operation _* |-->
query _* |-->


OclClassContents::
; |-->
; _1 |-->_1
; _1 ; |-->_1
; _* |-->_*`recurse
_1 ; |-->_1
_1 ; _* |-->_1 _*`recurse


OclAttribute::
attribute _2 : double   |--> this._2 = 0.0;
attribute _2 : String   |--> this._2 = ""; 
attribute _2 : int  |--> this._2 = 0;
attribute _2 : long  |--> this._2 = 0;
attribute _2 : _4  |--> this._2 = null 

static attribute _2 : _4  |--> 


OclEnumeration::
enumeration _2 { _4 }  |-->const _2 = _4`seq3subruleset152 <EOF> 

OclStatement::
skip |-->
var _2 : Map ( _3  , _4  )   |-->let _2 = { } ; 
var _2 : int   |-->let _2 = 0 ; 
var _2 : long   |-->let _2 = 0 ; 
var _2 : double   |-->let _2 = 0.0 ; 
var _2 : boolean   |-->let _2 = false ; 
var _2 : String   |-->let _2 = "" ; 
var _2 : _4   |-->let _2 = _4`typInit ; 
( _2 )  |-->{ _2`seq3subruleset77 } 
return _2  |-->return _2 ; 
call _2  |-->_2 ; 
while _2 do _4  |-->while ( _2 ) { _4 } 
_1 := _3  |-->_1 = _3 ; 
if _2 then _4 else _6  |-->if ( _2 ) { _4 } else { _6 } 
for _2 : _4 do _6  |-->for ( var _2 of _4 ) { _6 } 
break  |-->break ; 
continue  |-->continue ; 
return  |-->return ; 



